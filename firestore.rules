rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow only authenticated users
    function isSignedIn() {
      return request.auth != null;
    }

    // Allow user to access their own user profile document
    match /users/{userId} {
      allow read, write: if isSignedIn() && request.auth.uid == userId;
    }

    // Cards collection: each card has a userId field set to the owner's uid
    match /cards/{cardId} {
      allow read, create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isSignedIn() && resource.data.userId == request.auth.uid;

      // Optional: Basic schema constraints to harden writes
      allow create, update: if
        request.resource.data.keys().hasAll(['userId', 'player', 'year', 'manufacturer', 'sport']) &&
        request.resource.data.userId == request.auth.uid &&
        request.resource.data.year is int &&
        request.resource.data.player is string &&
        request.resource.data.manufacturer is string &&
        request.resource.data.sport is string;
    }

    // Deny everything else by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}


